{"version":3,"file":"native.js","sourceRoot":"","sources":["../../../src/native-tabs/botom-accessory/native.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;AAab,sDAUC;AArBD,+BAAyC;AACzC,+CAAoE;AAEpE,MAAM,uBAAuB,GAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK,IAAI,CAAC,uBAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC;AAGnF,MAAM,yBAAyB,GAC7B,uBAAuB;IACrB,CAAC,CAAC,IAAA,wBAAiB,EAAC,2BAA2B,EAAE,2BAA2B,CAAC;IAC7E,CAAC,CAAC,IAAI,CAAC;AACX,SAAgB,qBAAqB,CAAC,KAAiC;IACrE,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,CACL,CAAC,yBAAyB,CACxB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,yBAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,EACnE,CACH,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport { requireNativeView } from 'expo';\nimport { Platform, StyleSheet, type ViewProps } from 'react-native';\n\nconst areNativeViewsAvailable =\n  process.env.EXPO_OS === 'ios' && !Platform.isTV && global.RN$Bridgeless === true;\n\nexport type NativeBottomAccessoryProps = ViewProps;\nconst NativeBottomAccessoryView: React.ComponentType<NativeBottomAccessoryProps> | null =\n  areNativeViewsAvailable\n    ? requireNativeView('ExpoRouterBottomAccessory', 'BottomAccessoryNativeView')\n    : null;\nexport function NativeBottomAccessory(props: NativeBottomAccessoryProps) {\n  if (!NativeBottomAccessoryView) {\n    return null;\n  }\n  return (\n    <NativeBottomAccessoryView\n      {...props}\n      style={StyleSheet.flatten([props.style, { position: 'absolute' }])}\n    />\n  );\n}\n"]}